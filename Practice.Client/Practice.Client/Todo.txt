1) Implement all repositories for each entity (Car, CarType,.....)
2) for each repositories create instances like in Program .cs (see static ctor)
3) By clicking on Trunk menu item show TrunkWindow ()
	a) implement menu (Options -> Add)
	b) create AddTrunkWindow (implment all UI components and buttons :add, cancel)
	c) How to work with datagrid component in windows forms (http://www.dotnetperls.com/datagridview)
	d) after each operation with trunk refresh datagrid


Task due to Tuesday:
1) Move Move all repositories to persistent infrastructure (XML)
	a) in app root folder create 4 separate files for each repo
	b) read how to work with XML (XDocumet etc)

2) Implement the same logic for the Car window 
 + add logic of car affinity to the appropriate trunk .(on the car window add combobox and loaf the trnks from the TrunkRepo)

TO READ:
- arrays
- how to work with XML

- WCF !!!!!!!!!!!!!!!!
- Threading (page 744) 
	a) thread syncronization!!!!!!!!!!!!!!

- EntityFramework


To monday:
1) move all repo loading activities to the background thread!!!
2) Implement server part
 - for each repo create appropriate service in Practice.Server projects
  - create proxies for each repos
  - asynchronous calls of all proxy methods in client solution
  - look at xml repositories, check SourcePath property!!!



  ------------------------
  1) all actions regarding the invocation of the web service must be in the separate Thread!!
  2) implement cache logic for all services
